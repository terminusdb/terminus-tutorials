#!/usr/bin/env bash
set -eux

# do a proper conda activation
source activate ${NB_PYTHON_PREFIX}

# build swipl
mkdir $HOME/swipl_bld

cd $HOME/swipl_bld
wget -N https://www.swi-prolog.org/download/stable/src/swipl-8.2.1.tar.gz
tar -xvzf swipl-8.2.1.tar.gz
cd swipl-8.2.1

mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=${NB_PYTHON_PREFIX} -G Ninja ..
ninja
ninja install

# smoke test swipl
swipl -g "writeln('hello world')." -t 'halt.'

cd $HOME

rm -rf $HOME/swipl_bld

# install prolog package
cat << EOF > install.pl
:- initialization main.

install:-
        pack_install(terminus_store_prolog, [interactive(false)]).

main:-
        catch(install, E, (print_message(error, E), fail)),
        halt.
main:-
        halt(1).
EOF

swipl install.pl

# get server source
git clone https://github.com/terminusdb/terminusdb-server --depth=1


# start terminusdb setup
pushd terminusdb-server
export TERMINUSDB_HTTPS_ENABLED=0
./utils/db_init --key "root" --port "6363" --protocol "http"
./start.pl &
_TMP_TDB_PID=$!

# rewrite some schemas
export SCHEMA_CREATORS=$(git grep -l create_schema */*.py */*/*.py)

git grep -l ':6364' $SCHEMA_CREATORS \
    | xargs sed -i 's/localhost:6364/localhost:6363/g' || echo 'no 6366'

git grep -l ':6366' $SCHEMA_CREATORS \
    | xargs sed -i 's/localhost:6366/localhost:6363/g' || echo 'no 6366'

git grep -l 'https://localhost:6363' $SCHEMA_CREATORS \
    | xargs sed -i 's/https:\/\/localhost:6363"/http:\/\/localhost:6363", insecure=True/g' || echo 'no https'

git grep -l 'insecure=True,\s*insecure=True' $SCHEMA_CREATORS \
    | xargs sed -i 's/insecure=True,\s*insecure=True/insecure=True/g' || echo 'no dupe insecure'

# pre-populate database with examples
for schema_creator in $(git grep -l create_schema '*/*.py')
do
  python $schema_creator || echo "$schema_creator failed, continuing..."
done

kill $_TMP_TDB_PID

# done with terminusdb setup
popd

cat << EOF > start_binder_terminusdb.sh
export TERMINUSDB_HTTPS_ENABLED=0
cd ${HOME}/terminusdb-server
./start.pl
EOF

chmod +x start_binder_terminusdb.sh

# get javascript stuff
yarn global add @terminusdb/terminusdb-client tslab

# link so it works when installed, hard to mess with $PATH
ln -s ~/.yarn/bin/tslab $CONDA_PREFIX/bin/tslab

# install tslab kernel
tslab install

# remove any extras installed by binder (avoid incompatibility complaints with lab)
jupyter lab clean --all

# install labextensions
jupyter labextension install --no-build --debug \
    @jupyter-widgets/jupyterlab-manager \
    @jupyterlab/toc \
    @pyviz/jupyterlab_pyviz \
    bqplot \
    jupyter-cytoscape \
    qgrid2

# build lab
jupyter lab build --debug --minimize=False

# import workspace
jupyter lab workspace import .binder/terminusdb-tutorials.jupyterlab-workspace
